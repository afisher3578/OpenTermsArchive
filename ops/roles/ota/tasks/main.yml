- name: Clone Open Terms Archive engine
  git:
    repo: '{{ archivist_repository }}'
    version: '{{ archivist_version }}'
    dest: '/home/{{ ansible_user }}/{{ app }}'
    force: yes
    accept_hostkey: yes
    key_file: '/home/{{ ansible_user }}/.ssh/ota-bot-key'
    depth: 1
  register: git_clone_app_finished
  tags:
    - setup
    - update

- name: Install dependencies
  command:
    cmd: npm ci --production --unsafe-perm=true
    chdir: '/home/{{ ansible_user }}/{{ app }}'
  tags:
    - setup
    - update

- name: Add .env file
  copy:
    src: .env
    dest: '/home/{{ ansible_user }}/{{ app }}/.env'
  tags:
    - setup

- include_tasks: github.yml
  tags:
    - setup

- name: Install services declarations
  git:
    repo: '{{ services_repository }}'
    dest: '/home/{{ ansible_user }}/{{ services_directory }}'
    force: yes
    accept_hostkey: yes
    key_file: '/home/{{ ansible_user }}/.ssh/ota-bot-key'
    depth: 1
  register: git_clone_app_finished
  tags:
    - setup
    - update
    - update-declarations

- name: Install services declarations dependencies
  command:
    cmd: npm ci --production
    chdir: '/home/{{ ansible_user }}/{{ services_directory }}'
  tags:
    - setup
    - update
    - update-declarations

- name: Stop Open Terms Archive process
  command: pm2 --silent stop "{{ app }}"
  ignore_errors: yes
  tags:
    - restart
    - stop
    - update
    - update-declarations

- name: Unregister Open Terms Archive from process manager
  command: pm2 --silent delete "{{ app }}"
  ignore_errors: yes
  tags:
    - restart
    - stop
    - update
    - update-declarations

- include_tasks: database.yml
  vars:
    name: snapshots
    repository: '{{ snapshots_repository }}'
    branch: '{{ snapshots_branch }}'
    directory: '{{ snapshots_directory }}'
  tags:
    - setup
    - update

- include_tasks: database.yml
  vars:
    name: versions
    repository: '{{ versions_repository }}'
    branch: '{{ versions_branch }}'
    directory: '{{ versions_directory }}'
  tags:
    - setup
    - update

- name: Start Open Terms Archive
  command:
    cmd: pm2 start --name "{{ app }}" --exp-backoff-restart-delay=1000 npm -- run start:scheduler
    chdir: '/home/{{ ansible_user }}/{{ app }}'
  environment:
    NODE_ENV: production
  tags:
    - restart
    - start
    - update
    - update-declarations
